@model IEnumerable<BW_ECOMMERCE.Models.Prodotto>

@{
    ViewData["Title"] = "Home Page";
}
<link rel="stylesheet" href="./css/index.css" />


<div class="p-5 row" id="start">
    <div class="col-6">

    <h5 class="text-white">100% Love Food</h5>
    <h1 class="myGreen">GustaShop: Delizie dal Mondo a Portata di Click</h1>
    <h4 class="text-white text-center">Sapori autentici e ingredienti freschi direttamente a casa tua, per un'esperienza culinaria unica ogni giorno</h4>
    </div>
    <div class="col-6">
        <div id="carouselExample" class="carousel slide" >
            <div class="carousel-inner" >
                <div class="carousel-item active">
                    <img src="https://media-assets.lacucinaitaliana.it/photos/62f13332427334526e447ad8/16:9/w_1920,c_limit/480931380" class="d-block w-100" height="350px" alt="img">
                </div>
                <div class="carousel-item">
                    <img src="https://img.freepik.com/premium-photo/fruit-background_501761-2549.jpg?w=1380" class="d-block w-100" height="350px" alt="img">
                </div>
                <div class="carousel-item">
                    <img src="https://www.diet-health.info/images/recipes/1400/weizenkoerner-wheat-grains-by-stockpics-fotolia-78750746.jpg.webp" class="d-block w-100" height="350px" alt="img">
                </div>
            </div>
            <button class="carousel-control-prev" type="button" data-bs-target="#carouselExample" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#carouselExample" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>
    </div>

   
</div>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-10">
            <div class="row mt-4 justify-content-around">
                @foreach (var product in Model)
                {
                    <div class="card col-5 mx-1 mb-3 shadow" style="max-width: 540px;">
                        <div class="row g-0">
                            <div class="col-md-4">
                                @if (!string.IsNullOrEmpty(product.ImgProdotto))
                                {
                                    <img src="data:image;base64,@product.ImgProdotto" class="img-fluid rounded-start" alt="Immagine Prodotto">
                                }
                                else
                                {
                                    <img src="/img/placeholder.jpg" class="img-fluid rounded-start" alt="Immagine non disponibile">
                                }
                            </div>
                            <div class="col-md-8">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <h5 class="card-title m-0">@product.NomeProdotto</h5>
                                        <button class="btn btn-primary" onclick="addToCart(@product.IdProdotto)">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-cart-plus-fill" viewBox="0 0 16 16">
                                                <path d="M.5 1a.5.5 0 0 0 0 1h1.11l.401 1.607 1.498 7.985A.5.5 0 0 0 4 12h1a2 2 0 1 0 0 4 2 2 0 0 0 0-4h7a2 2 0 1 0 0 4 2 2 0 0 0 0-4h1a.5.5 0 0 0 .491-.408l1.5-8A.5.5 0 0 0 14.5 3H2.89l-.405-1.621A.5.5 0 0 0 2 1zM6 14a1 1 0 1 1-2 0 1 1 0 0 1 2 0m7 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0M9 5.5V7h1.5a.5.5 0 0 1 0 1H9v1.5a.5.5 0 0 1-1 0V8H6.5a.5.5 0 0 1 0-1H8V5.5a.5.5 0 0 1 1 0" />
                                            </svg>
                                        </button>
                                    </div>
                                    <p class="card-text">@product.DescBreve</p>
                                    <p class="card-text">€@product.Prezzo</p>
                                    <p class="card-text">Quantità disponibile: @product.Quantity</p>
                                    <form>
                                        <label for="quantity-@product.IdProdotto">Seleziona la quantità:</label>
                                        <input type="number" id="quantity-@product.IdProdotto" name="quantity" min="1" max="@product.Quantity" value="1">
                                    </form>
                                    <p class="card-text"><small class="text-body-secondary">Data Inserimento: @product.DataIns.ToString("dd/MM/yyyy")</small></p>
                                    <div class="d-flex">
                                        <a asp-action="Dettagli" asp-route-id="@product.IdProdotto" class="btn btn-secondary">Dettagli</a>
                                        <form asp-action="Delete" method="post">
                                            <input type="hidden" name="id" value="@product.IdProdotto" />
                                            <button type="submit" class="btn btn-danger ms-2">Elimina</button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    function addToCart(productId) {
        const quantity = document.getElementById(`quantity-${productId}`).value;

        // Create a hidden form
        const form = document.createElement("form");
        form.method = "POST";
        form.action = "InsertCarrello()";

        // Add hidden fields
        const hiddenProductId = document.createElement("input");
        hiddenProductId.type = "hidden";
        hiddenProductId.name = "IdProdottoFK";
        hiddenProductId.value = productId;
        form.appendChild(hiddenProductId);

        const hiddenQuantity = document.createElement("input");
        hiddenQuantity.type = "hidden";
        hiddenQuantity.name = "Qnty";
        hiddenQuantity.value = quantity;
        form.appendChild(hiddenQuantity);

        const hiddenConfermato = document.createElement("input");
        hiddenConfermato.type = "hidden";
        hiddenConfermato.name = "Confermato";
        hiddenConfermato.value = false; // or true depending on your requirement
        form.appendChild(hiddenConfermato);

        const hiddenPresente = document.createElement("input");
        hiddenPresente.type = "hidden";
        hiddenPresente.name = "Presente";
        hiddenPresente.value = true; // or false depending on your requirement
        form.appendChild(hiddenPresente);

        const hiddenIdUtenteFK = document.createElement("input");
        hiddenIdUtenteFK.type = "hidden";
        hiddenIdUtenteFK.name = "IdUtenteFK";
        hiddenIdUtenteFK.value = 30; // Replace with the actual user ID from your session or context
        form.appendChild(hiddenIdUtenteFK);

        document.body.appendChild(form);
        form.submit();
    }
</script>
